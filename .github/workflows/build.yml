name: build
on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *"
jobs:
  build-test-lint:
    name: FFmpeg ${{ matrix.ffmpeg_version }} - build, test and lint
    runs-on: ubuntu-latest
    container: jrottenberg/ffmpeg:${{ matrix.ffmpeg_version }}-ubuntu
    strategy:
      matrix:
        ffmpeg_version: ['3.3', '3.4', '4.0', '4.1', '4.2', '4.3', '4.4', '5.0', '5.1', '6.0']
      fail-fast: false
    env:
      FEATURES: avcodec,avdevice,avfilter,avformat,postproc,swresample,swscale
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          apt update
          apt install -y --no-install-recommends clang curl pkg-config
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Build
        run: |
          cargo build --features $FEATURES
      - name: Test
        run: |
          cargo test --features $FEATURES
      - name: Lint
        run: |
          cargo clippy --features $FEATURES -- -D warnings
      - name: Check format
        run: |
          cargo fmt -- --check
  build-test-lint-latest:
    name: FFmpeg Latest - build, test and lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      FEATURES: avcodec,avdevice,avfilter,avformat,postproc,swresample,swscale
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y software-properties-common
          sudo add-apt-repository -y ppa:savoury1/ffmpeg6
          sudo add-apt-repository -y ppa:savoury1/ffmpeg4
          sudo apt update
          sudo apt install -y --no-install-recommends clang curl pkg-config ffmpeg libavutil-dev libavcodec-dev libavformat-dev libavfilter-dev libavfilter-dev libavdevice-dev libswresample-dev
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Build
        run: |
          cargo build --features $FEATURES
      - name: Test
        run: |
          cargo test --features $FEATURES
      - name: Lint
        run: |
          cargo clippy --features $FEATURES -- -D warnings
      - name: Check format
        run: |
          cargo fmt -- --check
